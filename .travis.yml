sudo: false

language:
    - cpp

dist:
    - trusty

#env:
#    - BUILD_SHARED_LIBS="ON" CMAKE_BUILD_TYPE="Release"
#    - BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Release"
#    - BUILD_SHARED_LIBS="ON" CMAKE_BUILD_TYPE="Debug"
#    - BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug"

#before_install:
#    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
#    - sudo apt-get update -qq

matrix:
  include:

    # 1/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &clang38
        apt:
          sources: ['llvm-toolchain-precise-3.8', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.8']
      env: COMPILER='clang++-3.8'

    # 2/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc6
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6']
      env: COMPILER='g++-6'

    # 3/ OSX Clang Builds
    - os: osx
      osx_image: xcode8
      compiler: clang
      env: COMPILER='clang++'

install:
    - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps_"
    - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
    - |
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        CMAKE_URL="http://www.cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.tar.gz"
        mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        which cmake || brew install cmake
      fi
    - cd ${TRAVIS_BUILD_DIR}

before_script:
    export CXX=${COMPILER}

script:
    - mkdir _builds
    - cd _builds
    # Note: clang not support libc++
    - cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DUri_DISABLE_LIBCXX=YES -DUri_BUILD_TESTS=ON -DUri_BUILD_DOCS=OFF ..
    - make -j 8
    - make test

after_failure:
    - cat Testing/Temporary/LastTest.log
